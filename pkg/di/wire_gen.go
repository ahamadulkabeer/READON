// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"readon/config"
	"readon/pkg/api"
	"readon/pkg/api/handler"
	"readon/pkg/api/helpers"
	"readon/pkg/db"
	"readon/pkg/repository"
	"readon/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	
	userRepository := repository.NewUserRepository(gormDB)
	productRepository := repository.NewProductRepository(gormDB)
	adminRepository := repository.NewAdminRepository(gormDB)
	categoryRepository := repository.NewCategoryRepository(gormDB)
	cartRepository := repository.NewCartRepository(gormDB)
	addressRepository := repository.NewAddressRepository(gormDB)
	couponRepository := repository.NewCouponRepository(gormDB)
	orderRepository := repository.NewOrdersRepository(gormDB)


	userUseCase := usecase.NewUserUseCase(userRepository)
	userHandler := handler.NewUserHandler(userUseCase)

	
	productUseCase := usecase.NewProductUseCase(productRepository)
	productHandler := handler.NewProductHandler(productUseCase)

	
	adminUsecase := usecase.NewAdminUsecase(adminRepository,userRepository)
	adminHandler := handler.NewAdminHandler(adminUsecase)

	
	categoryUsecase := usecase.NewCategoryUseCase(categoryRepository)
	categoryHandler := handler.NewCategoryHandler(categoryUsecase)

    
    cartUseCase := usecase.NewCartUseCase(cartRepository,productRepository)
    cartHandler := handler.NewCartHandler(cartUseCase)

	
	addressUseCase := usecase.NewAddressUsecase(addressRepository)
	addressHandler := handler.NewAddressHandler(addressUseCase)

	
	couponUseCase := usecase.NewCouponUseCase(couponRepository)
	couponHandler := handler.NewCouponHandler(couponUseCase)

	
	orderUsecase := usecase.NewOrderUseCase(orderRepository,cartRepository,addressRepository,productRepository,couponRepository,userRepository)
	orderHandler := handler.NewOrderHandler(orderUsecase)

	
	// api key initilization

	err = loadApikeys(cfg)
	if err != nil {
		return nil,err
	}
	
	serverHTTP := http.NewServerHTTP(userHandler,productHandler,adminHandler,categoryHandler,cartHandler,orderHandler,addressHandler,couponHandler)

	return serverHTTP, nil
}

func loadApikeys(cfg config.Config)error{
	if err := usecase.LoadRazorpayConfig(cfg.RazorpayKey,cfg.RazorpaySecret); err != nil {
		return err
	}
	if err :=  helpers.SetSendgridConfig(cfg.SendgridApiKey); err != nil {
		return err
	}
	
	return nil
}