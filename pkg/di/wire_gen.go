// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"readon/pkg/api"
	"readon/pkg/api/handler"
	"readon/pkg/config"
	"readon/pkg/db"
	"readon/pkg/repository"
	"readon/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	
	userRepository := repository.NewUserRepository(gormDB)
	productRepository := repository.NewProductRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository)
	userHandler := handler.NewUserHandler(userUseCase)

	
	productUseCase := usecase.NewProductUseCase(productRepository)
	productHandler := handler.NewProductHandler(productUseCase)

	adminRepository := repository.NewAdminRepository(gormDB)
	adminUsecase := usecase.NewAdminUsecase(adminRepository,userRepository)
	adminHandler := handler.NewAdminHandler(adminUsecase)

	categoryRepository := repository.NewCategoryRepository(gormDB)
	categoryUsecase := usecase.NewCategoryUseCase(categoryRepository)
	categoryHandler := handler.NewCategoryHandler(categoryUsecase)

    CartRepository := repository.NewCartRepository(gormDB)
    CartUseCase := usecase.NewCartUseCase(CartRepository)
    CartHandler := handler.NewCartHandler(CartUseCase)

	OrderRepository := repository.NewOrdersRepository(gormDB)
	OrderUsecase := usecase.NewOrderUseCase(OrderRepository,CartRepository)
	OrderHandler := handler.NewOrderHandler(OrderUsecase)


	serverHTTP := http.NewServerHTTP(userHandler,productHandler,adminHandler,categoryHandler,CartHandler,OrderHandler)

	return serverHTTP, nil
}
